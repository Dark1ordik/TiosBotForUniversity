import telebot
from telebot import types

bot = telebot.TeleBot('')

user_data = {}

# –°–ª–æ–≤–∞—Ä—å —Å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —É—Ä–æ–≤–Ω—è
DIRECTIONS = {
    '–ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞': [
        '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
        '–ö–æ–Ω—Å—Ç—Ä—É–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–¥–µ–ª–∏–π –ª–µ–≥–∫–æ–π –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç–∏',
        '–°–µ—Ä–≤–∏—Å —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –∏ —ç–Ω–µ—Ä–≥–æ–∞—É–¥–∏—Ç',
        '–°–µ—Ä–≤–∏—Å —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤',
        '–≠–∫–æ–Ω–æ–º–∏–∫–∞ —Ñ–∏—Ä–º—ã (–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ)'
    ],
    '–ë–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç': [
        '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
        '–†–∞–¥–∏–æ—Ç–µ—Ö–Ω–∏–∫–∞',
        '–ò–Ω—Ñ–æ–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ —Å–∏—Å—Ç–µ–º—ã —Å–≤—è–∑–∏',
        '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –º–∞—à–∏–Ω—ã –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ',
        '–¢–µ—Ö–Ω–æ—Å—Ñ–µ—Ä–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
        '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è –∏–∑–¥–µ–ª–∏–π –ª–µ–≥–∫–æ–π –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç–∏',
        '–≠–∫–æ–Ω–æ–º–∏–∫–∞',
        '–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç',
        '–°–µ—Ä–≤–∏—Å',
        '–¢—É—Ä–∏–∑–º'
    ],
    '–°–ü–û': [
        '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
        '–†–∞–¥–∏–æ—Ç–µ—Ö–Ω–∏–∫–∞',
        '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –º–∞—à–∏–Ω—ã –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ',
        '–¢–µ—Ö–Ω–æ—Å—Ñ–µ—Ä–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
        '–°–µ—Ä–≤–∏—Å'
    ]
}


def create_main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('üìÑ–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ—Å—Ç—É–ø–∞—é—â–∏—Ö')
    item2 = types.KeyboardButton('üìû–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
    markup.add(item1, item2)
    return markup


def create_back_button():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    back = types.KeyboardButton('‚¨Ö–ù–∞ –≥–ª–∞–≤–Ω—É—é')
    markup.add(back)
    return markup


def create_education_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('üìï–ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞')
    item2 = types.KeyboardButton('üìô–ë–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç')
    item3 = types.KeyboardButton('üìó–°–ü–û')
    item4 = types.KeyboardButton('–û –í—É–∑–µ')
    back = types.KeyboardButton('‚¨Ö–ù–∞ –≥–ª–∞–≤–Ω—É—é')
    markup.add(item1, item2, item3, item4, back)
    return markup


def create_directions_menu(education_level):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    directions = DIRECTIONS.get(education_level, [])
    buttons = [types.KeyboardButton(d) for d in directions]
    markup.add(*buttons)
    back = types.KeyboardButton('‚¨Ö–ù–∞–∑–∞–¥')
    markup.add(back)
    return markup


def create_finance_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('üí∞–ë—é–¥–∂–µ—Ç')
    item2 = types.KeyboardButton('üíµ–ö–æ–º–º–µ—Ä—Ü–∏—è')
    back = types.KeyboardButton('‚¨Ö–ù–∞–∑–∞–¥')
    markup.add(item1, item2, back)
    return markup


@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(
        message.chat.id,
        f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}',
        reply_markup=create_main_menu()
    )


@bot.message_handler(content_types=['text'])
def bot_message(message):
    if message.chat.type != 'private':
        return

    chat_id = message.chat.id

    if message.text == 'üìû–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è':
        contact_info = """
<i>–ö–æ–Ω—Ç–∞–∫—Ç—ã</i>
<b>–ê–¥—Ä–µ—Å:</b>
355000, –≥. –°—Ç–∞–≤—Ä–æ–ø–æ–ª—å, –ø—Ä–æ—Å–ø–µ–∫—Ç –ö—É–ª–∞–∫–æ–≤–∞, –¥. 41/1, –∫–∞–±. 110,
—Ç–µ–ª. 8 (8652) 39-69-97
<b>–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã:</b>
–ü–Ω. - –ü—Ç.: 8.00 -17.00, –ø–µ—Ä–µ—Ä—ã–≤ 12.00-13.00
–°–±.: 9.00 - 14.00, –±–µ–∑ –ø–µ—Ä–µ—Ä—ã–≤–∞
–í—Å.: –≤—ã—Ö–æ–¥–Ω–æ–π
<b>–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã:</b>
Email: <i>otcom@stis.su</i>
–°–∞–π—Ç: https://stis.su
        """
        bot.send_message(chat_id, contact_info,
                         parse_mode='HTML', reply_markup=create_back_button())

    elif message.text == 'üìÑ–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ—Å—Ç—É–ø–∞—é—â–∏—Ö':
        bot.send_message(chat_id, '–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è:',
                         reply_markup=create_education_menu())

    elif message.text in ['üìï–ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞', 'üìô–ë–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç', 'üìó–°–ü–û']:
        education_level = message.text[1:]  # –£–±–∏—Ä–∞–µ–º —ç–º–æ–¥–∑–∏
        user_data[chat_id] = {'education_level': education_level}
        bot.send_message(
            chat_id,
            f'–í—ã –≤—ã–±—Ä–∞–ª–∏ {education_level}. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:',
            reply_markup=create_directions_menu(education_level)
        )

    elif message.text in sum(DIRECTIONS.values(), []):
        if chat_id in user_data:
            user_data[chat_id]['direction'] = message.text
            bot.send_message(
                chat_id,
                f'–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {message.text}\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º—É –æ–±—É—á–µ–Ω–∏—è:',
                reply_markup=create_finance_menu()
            )

    elif message.text in ['üí∞–ë—é–¥–∂–µ—Ç', 'üíµ–ö–æ–º–º–µ—Ä—Ü–∏—è']:
        if chat_id in user_data:
            data = user_data[chat_id]
            response = (
                f"–í—ã –≤—ã–±—Ä–∞–ª–∏:\n"
                f"–£—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è: {data['education_level']}\n"
                f"–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {data['direction']}\n"
                f"–§–æ—Ä–º–∞ –æ–±—É—á–µ–Ω–∏—è: {message.text}\n\n"
            )

            if message.text == 'üí∞–ë—é–¥–∂–µ—Ç':
                response += "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±—é–¥–∂–µ—Ç–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö:\n[–î–∞–Ω–Ω—ã–µ –ø–æ –±—é–¥–∂–µ—Ç—É]"
            else:
                response += "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–º –æ–±—É—á–µ–Ω–∏–∏:\n[–î–∞–Ω–Ω—ã–µ –ø–æ –∫–æ–º–º–µ—Ä—Ü–∏–∏]"

            bot.send_message(chat_id, response)

    elif message.text == '‚¨Ö–ù–∞–∑–∞–¥':
        if chat_id in user_data:
            del user_data[chat_id]
        bot.send_message(chat_id, '–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è:',
                         reply_markup=create_education_menu())

    elif message.text == '‚¨Ö–ù–∞ –≥–ª–∞–≤–Ω—É—é':
        if chat_id in user_data:
            del user_data[chat_id]
        bot.send_message(chat_id, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
                         reply_markup=create_main_menu())

    elif message.text == '–û –í—É–∑–µ':
        bot.send_message(
            chat_id,
            "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—É–∑–µ:\n[–ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—É–∑–µ]",
            reply_markup=create_education_menu()
        )

    else:
        bot.send_message(
            chat_id,
            "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
            reply_markup=create_main_menu()
        )


if __name__ == '__main__':
    bot.polling(none_stop=True)
